{
    "global": {
        "libs": {
            "sslearn": null,
            "ubulearn": "/path_to_admirable-methods/admirable-methods/"
        },
        "data": {
            "path": "/path_to_uci_csv/",
            "ignored_datasets": [],
            "only_datasets": null
        },
        "done_path": "/path_experiments_db/experiments_done.db",
        "seed": 100,
        "n_splits": 10,
        "clf_seed": 0,
        "n_repeats": 5,
        "label_rates": [
            0.10,
            0.20,
            0.30,
            0.40
        ],
        "n_jobs": 50,
        "checkpoints": {
            "enabled": true,
            "path": "./checkpoints"
        },
        "session": "session_dn",
        "relaunch": false
    },
    "models": {
        "Bagging": {
            "kind": "supervised",
            "model": "BaggingClassifier",
            "modes": [
                {
                    "name": "Bagging",
                    "params": {
                        "n_estimators": 100
                    }
                },
                {
                    "name": "DisturbingNeighbors-Bag",
                    "params": {
                        "n_estimators": 100,
                        "base_estimator": "DisturbingNeighborsClassifier(base_estimator=DecisionTreeClassifier())"
                    }
                }
            ]
        },
        "SelfTraining": {
            "kind": "semi-supervised",
            "model": "SelfTraining",
            "modes": [     
                {
                    "name": "SelfDisturbingNeighbors-Bag",
                    "params": {
                        "base_estimator": "BaggingClassifier(base_estimator=DisturbingNeighborsClassifier(base_estimator=DecisionTreeClassifier()), n_estimators=100)"
                    }
                },
                {
                    "name": "Self-Bag",
                    "params": {
                        "base_estimator": "BaggingClassifier(n_estimators=100)"
                    }
                }
            ]
        },
        "CoTrainingByCommittee": {
            "kind": "semi-supervised",
            "model": "CoTrainingByCommittee",
            "modes": [
                {
                    "name": "CoTrainingByCommittee-DisturbingNeighbors-Bag",
                    "params": {
                        "ensemble_estimator": "BaggingClassifier(base_estimator=DisturbingNeighborsClassifier(base_estimator=DecisionTreeClassifier()), n_estimators=100)"
                    }
                },
                {
                    "name": "CoTrainingByCommittee-Bag",
                    "params": {
                        "ensemble_estimator": "BaggingClassifier(base_estimator=DecisionTreeClassifier(), n_estimators=100)"
                    }
                }
            ]
        },
        "TriTraining": {
            "kind": "semi-supervised",
            "model": "TriTraining",
            "modes": [
                {
                    "name": "TriTraining-Bag",
                    "params": {
                        "base_estimator": "BaggingClassifier(base_estimator=DecisionTreeClassifier(), n_estimators=33)"
                    }
                },
                {
                    "name": "TriTraining-DN-Bag",
                    "params": {
                        "base_estimator": "BaggingClassifier(base_estimator=DisturbingNeighborsClassifier(base_estimator=DecisionTreeClassifier()), n_estimators=33)"
                    }
                }
            ]
        }
    }
}
